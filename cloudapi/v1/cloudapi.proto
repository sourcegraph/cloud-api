syntax = "proto3";

package cloudapi.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sourcegraph/cloud-api/go/cloudapi/v1;cloudapiv1";

message ListInstancesRequest {
  string slug = 1;
  bool with_tasks = 2;
}

message ListInstancesResponse {
  repeated Instance instances = 1;
  InstanceDrift drift = 2;
}

message Instance {
  string id = 1;
  string project_name = 2;
  string type = 3;
  oneof repo_details {
    V1RepoDetails v1_repo_details = 4;
    V2RepoDetails v2_repo_details = 5;
  }
  ProjectDetails project_details = 6;
  string status = 7;
  repeated TaskDetails task_details = 8;
}

message InstanceDrift {
  repeated Instance only_repo = 1;
  repeated Instance only_project = 2;
}

message ProjectDetails {
  string project_id = 1;
  string email_domain = 2;
  string instance_type = 3;
  bool is_deleted = 4;
  google.protobuf.Timestamp created_at = 5;
}

message V1RepoDetails {
  string customer = 1;
  string email_domain = 2;
  string endpoint = 3;
  string instance_type = 4;
  string type = 5;
  bool disable_managed_smtp = 6;
  bool disable_sourcegraph_management_access = 7;
}

message V2RepoDetails {}

message TaskDetails {
  string name = 1;
  string type = 2;
  string condition_type = 3;
  string condition_status = 4;
}

service InstanceService {
  rpc ListInstances(ListInstancesRequest) returns (ListInstancesResponse) {}
  rpc CreateOrUpdateInstance(CreateOrUpdateInstanceRequest) returns (CreateOrUpdateInstanceResponse) {}
}

// cloud deploy my branch part
message CreateOrUpdateInstanceRequest {
  string branch_name = 1;
  string admin_email = 2;
}

message CreateOrUpdateInstanceResponse {
  Instance instance = 1;
  string create_id = 2;
}
