syntax = "proto3";

package cloudapi.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sourcegraph/cloud-api/go/cloudapi/v1;cloudapiv1";

message Instance {
  string id = 1;
  optional InstanceDetails instance_details = 2;
  optional PlatformDetails platform_details = 3;
  optional InstanceState instance_state = 4;
}

enum InstanceType {
  INSTANCE_TYPE_UNSPECIFIED = 0;
  INSTANCE_TYPE_INTERNAL = 1;
  INSTANCE_TYPE_TRIAL = 2;
  INSTANCE_TYPE_PRODUCTION = 3;
  INSTANCE_TYPE_EPHEMERAL = 4;
}

message InstanceDetails {
  string name = 1;
  InstanceType instance_type = 2;
  string environment = 3;
  string version = 4;
  optional string hostname = 5;
  optional string admin_email = 6;
  repeated string tags = 7;
}

message PlatformDetails {
  google.protobuf.Timestamp created_at = 1;
  string gcp_project_id = 2;
  string gcp_region = 3;
  optional google.protobuf.Timestamp deleted_at = 4;
}

enum InstanceStatus {
  INSTANCE_STATUS_UNSPECIFIED = 0;
  INSTANCE_STATUS_PROGRESSING = 1;
  INSTANCE_STATUS_OK = 2;
  INSTANCE_STATUS_FAILED = 3;
}

message InstanceState {
  InstanceStatus instance_status = 1;
  optional string reason = 2;
}

service InstanceService {
  rpc ListInstances(ListInstancesRequest) returns (ListInstancesResponse) {}
  rpc CreateInstance(CreateInstanceRequest) returns (CreateInstanceResponse) {}
  rpc UpdateInstance(UpdateInstanceRequest) returns (UpdateInstanceResponse) {}
  rpc GetInstance(GetInstanceRequest) returns (GetInstanceResponse) {}
  rpc DeleteInstance(DeleteInstanceRequest) returns (DeleteInstanceResponse) {}
}

// ListInstances via specific criteria, return all if no criteria specified
message ListInstancesRequest {
  optional InstanceFilter instance_filter = 1;
}

message InstanceFilter {
  optional string name = 1;
  optional string environment = 2;
  // instance status from InstanceStatus enum
  optional string status = 3;
  optional string version = 4;
  optional string hostname = 5;
  optional string admin_email = 6;
}

message ListInstancesResponse {
  repeated Instance instances = 1;
  InstanceDrift drift = 2;
}

// TODO move to instance details?
// InstanceDrift returns informations about drift between repository and control-plane
message InstanceDrift {
  repeated Instance only_repo = 1;
  repeated Instance only_project = 2;
}

// create instance
message CreateInstanceRequest {
  string name = 1;
  string type = 2;
  optional string environment = 3;
  optional string version = 4;
  optional string admin_email = 5;
  optional string hostname = 6;
  optional string license_key = 7;
  optional string gcp_region = 8;
  repeated string tags = 9;
}

message CreateInstanceResponse {
  Instance instance = 1;
  optional string error = 2;
}

/**
   patch instance
   https://google.aip.dev/134#patch-and-put
   **/
message UpdateInstanceRequest {
  Instance instance = 1;
}

message UpdateInstanceResponse {
  Instance instance = 1;
  optional string error = 2;
}

message InstanceNameAndEnvironmentQuery {
  string name = 1;
  string environment = 2;
}

// get instance by any field
message GetInstanceRequest {
  oneof identifier {
    string id = 1;
    InstanceNameAndEnvironmentQuery instance_name_and_environment = 2;
    string hostname = 3;
  }
}

message GetInstanceResponse {
  Instance instance = 1;
  optional string error = 2;
}

// delete instance
message DeleteInstanceRequest {
  Instance instance = 1;
}

message DeleteInstanceResponse {
  // status of the delete operation
  string status = 1;
  optional string error = 2;
}
